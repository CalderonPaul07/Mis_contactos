// Generated by view binder compiler. Do not edit!
package ec.edu.tecnologicoloja.miscontactos.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import ec.edu.tecnologicoloja.miscontactos.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentContactFragmentBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ListView contactList;

  @NonNull
  public final FloatingActionButton floatingNewContact;

  @NonNull
  public final TextView txtHome;

  private FragmentContactFragmentBinding(@NonNull RelativeLayout rootView,
      @NonNull ListView contactList, @NonNull FloatingActionButton floatingNewContact,
      @NonNull TextView txtHome) {
    this.rootView = rootView;
    this.contactList = contactList;
    this.floatingNewContact = floatingNewContact;
    this.txtHome = txtHome;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentContactFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentContactFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_contact_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentContactFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.contact_list;
      ListView contactList = ViewBindings.findChildViewById(rootView, id);
      if (contactList == null) {
        break missingId;
      }

      id = R.id.floating_new_contact;
      FloatingActionButton floatingNewContact = ViewBindings.findChildViewById(rootView, id);
      if (floatingNewContact == null) {
        break missingId;
      }

      id = R.id.txtHome;
      TextView txtHome = ViewBindings.findChildViewById(rootView, id);
      if (txtHome == null) {
        break missingId;
      }

      return new FragmentContactFragmentBinding((RelativeLayout) rootView, contactList,
          floatingNewContact, txtHome);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
